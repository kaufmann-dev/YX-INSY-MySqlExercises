DROP DATABASE IF EXISTS POKEMONS;
CREATE DATABASE POKEMONS;
USE POKEMONS;
 -- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Table `pokemon`.`E_SPECIES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS E_SPECIES (
  SPECIES_TYPE VARCHAR(45) NOT NULL,
  PRIMARY KEY (SPECIES_TYPE))
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table POKEMON_BT
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS POKEMON_BT (
  POKEMON_ID INT NOT NULL AUTO_INCREMENT,
  NAME VARCHAR(45) NOT NULL,
  HEALTH_POINTS INT NOT NULL,
  ATTACK INT NOT NULL,
  DEFENSE INT NOT NULL,
  SPECIAL_ATTACK INT NOT NULL,
  SPECIAL_DEFENSE INT NOT NULL,
  INITIATIVE INT NOT NULL,
  PRIMARY_SPECIES_TYPE VARCHAR(45) NOT NULL,
  SECONDARY_SPECIES_TYPE VARCHAR(45) NULL,
  DESCRIPTION TEXT NOT NULL,
  PRIMARY KEY (POKEMON_ID),
  UNIQUE INDEX NAME_UNIQUE (NAME ASC) VISIBLE,
  INDEX fk_POKEMON_E_SPECIES1_idx (PRIMARY_SPECIES_TYPE ASC) VISIBLE,
  INDEX fk_POKEMON_E_SPECIES2_idx (SECONDARY_SPECIES_TYPE ASC) VISIBLE,
  CONSTRAINT fk_POKEMON_E_SPECIES1
    FOREIGN KEY (PRIMARY_SPECIES_TYPE)
    REFERENCES E_SPECIES (SPECIES_TYPE)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_POKEMON_E_SPECIES2
    FOREIGN KEY (SECONDARY_SPECIES_TYPE)
    REFERENCES E_SPECIES (SPECIES_TYPE)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pokemon`.`ORIGIN_POKEMON`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS ORIGIN_POKEMON (
  POKEMON_ID INT NOT NULL,
  LEVEL_CAP INT NOT NULL,
  EVOLVED_FROM_ID INT NOT NULL,
  PRIMARY KEY (POKEMON_ID),
  INDEX fk_ORIGIN_POKEMON_ORIGIN_POKEMON1_idx (EVOLVED_FROM_ID ASC) VISIBLE,
  CONSTRAINT fk_ORIGIN_POKEMON_POKEMON_BT1
    FOREIGN KEY (POKEMON_ID)
    REFERENCES POKEMON_BT (POKEMON_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_ORIGIN_POKEMON_ORIGIN_POKEMON1
    FOREIGN KEY (EVOLVED_FROM_ID)
    REFERENCES ORIGIN_POKEMON (POKEMON_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pokemon`.`TRAINED_POKEMON`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS TRAINED_POKEMON (
  POKEMON_ID INT NOT NULL,
  LEVEL INT NOT NULL,
  EXPERIENCE INT NOT NULL,
  ORIGIN_TYPE_ID INT NOT NULL,
  PRIMARY KEY (POKEMON_ID),
  INDEX fk_TRAINED_POKEMON_ORIGIN_POKEMON1_idx (ORIGIN_TYPE_ID ASC) VISIBLE,
  CONSTRAINT fk_TEAMMEMBER_POKEMON_BT1
    FOREIGN KEY (POKEMON_ID)
    REFERENCES POKEMON_BT (POKEMON_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_TRAINED_POKEMON_ORIGIN_POKEMON1
    FOREIGN KEY (ORIGIN_TYPE_ID)
    REFERENCES ORIGIN_POKEMON (POKEMON_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pokemon`.`MOVES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS MOVES (
  MOVE_ID INT NOT NULL AUTO_INCREMENT,
  NAME VARCHAR(45) NOT NULL,
  SPECIES_TYPE VARCHAR(45) NOT NULL,
  ATTACK_POINTS INT NOT NULL,
  ATTACK_POWER INT NOT NULL,
  ACCURACY INT NOT NULL,
  LEVEL_REQUIREMENT INT NOT NULL,
  PRIMARY KEY (MOVE_ID),
  UNIQUE INDEX NAME_UNIQUE (NAME ASC) VISIBLE,
  INDEX fk_MOVES_E_SPECIES1_idx (SPECIES_TYPE ASC) VISIBLE,
  CONSTRAINT fk_MOVES_E_SPECIES1
    FOREIGN KEY (SPECIES_TYPE)
    REFERENCES E_SPECIES (SPECIES_TYPE)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pokemon`.`LEARNABLE_MOVES_JT`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS LEARNABLE_MOVES_JT (
  POKEMON_ID INT NOT NULL,
  MOVE_ID INT NOT NULL,
  PRIMARY KEY (POKEMON_ID, MOVE_ID),
  INDEX fk_ORIGIN_POKEMON_has_MOVES_MOVES1_idx (MOVE_ID ASC) VISIBLE,
  INDEX fk_ORIGIN_POKEMON_has_MOVES_ORIGIN_POKEMON1_idx (POKEMON_ID ASC) VISIBLE,
  CONSTRAINT fk_ORIGIN_POKEMON_has_MOVES_ORIGIN_POKEMON1
    FOREIGN KEY (POKEMON_ID)
    REFERENCES ORIGIN_POKEMON (POKEMON_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_ORIGIN_POKEMON_has_MOVES_MOVES1
    FOREIGN KEY (MOVE_ID)
    REFERENCES MOVES (MOVE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pokemon`.`TRAINED_MOVES_JT`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS TRAINED_MOVES_JT (
  ORIGIN_POKEMON_ID INT NOT NULL,
  MOVE_ID INT NOT NULL,
  TRAINED_POKEMON_ID INT NOT NULL,
  PRIMARY KEY (ORIGIN_POKEMON_ID, MOVE_ID, TRAINED_POKEMON_ID),
  INDEX fk_LEARNABLE_MOVES_JT_has_TEAMMEMBER_TEAMMEMBER1_idx (TRAINED_POKEMON_ID ASC) VISIBLE,
  INDEX fk_LEARNABLE_MOVES_JT_has_TEAMMEMBER_LEARNABLE_MOVES_JT1_idx (ORIGIN_POKEMON_ID ASC, MOVE_ID ASC) VISIBLE,
  CONSTRAINT fk_LEARNABLE_MOVES_JT_has_TEAMMEMBER_LEARNABLE_MOVES_JT1
    FOREIGN KEY (ORIGIN_POKEMON_ID , MOVE_ID)
    REFERENCES LEARNABLE_MOVES_JT (POKEMON_ID , MOVE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_LEARNABLE_MOVES_JT_has_TEAMMEMBER_TEAMMEMBER1
    FOREIGN KEY (TRAINED_POKEMON_ID)
    REFERENCES TRAINED_POKEMON (POKEMON_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
